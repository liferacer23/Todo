{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","text","todos","todo","setTodos","useState","flip","setFlip","className","delete","onClick","e","preventDefault","map","item","id","completed","placeholder","el","filter","TodoList","filteredTodos","Form","setStatus","setInputText","inputText","value","onChange","target","type","Math","random","name","length","App","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bda484a5.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { AiFillCheckCircle } from 'react-icons/ai'\r\nconst Todo = ({text,todos,todo,setTodos}) => {\r\n\r\n    const [flip,setFlip]=useState(false);\r\n    const deleteHandler =(e)=>\r\n    {\r\n        e.preventDefault();\r\n       setTodos(todos.map(el=>{\r\n            if(el.id === todo.id)\r\n            {\r\n                return {...el, delete:!el.delete}\r\n            }\r\n            return el;\r\n           \r\n        })); \r\n        setTodos(todos.filter(el=>el.id !==todo.id))  \r\n    }\r\n    const completedHandler=(e)=>\r\n    {\r\n        setFlip(!flip);\r\n        e.preventDefault();\r\n        setTodos(todos.map(item=>{\r\n            if(item.id === todo.id)\r\n            {\r\n                return {...item, completed:!item.completed}\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n    return (\r\n        <div className={`todo ${todo.delete?\"fall\":''}`}>\r\n            \r\n            {/* {`check ${flip?'checked':''}`} */}\r\n            <button onClick={completedHandler} className=\"complete-btn\">\r\n                <AiFillCheckCircle className={`check ${todo.completed?'checked':''}`} />\r\n            </button>\r\n            <input placeholder={text} className={`todo-item ${todo.completed ? \"completed\":''}`} />\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"trash\"><AiOutlineClose /></i>         \r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList=({todos, setTodos,filteredTodos})=>\r\n{\r\n  \r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n         {filteredTodos.map(todo=>{\r\n             return(\r\n                    <Todo todo={todo} setTodos={setTodos} todos={todos} text={todo.text} key={todo.id}/>\r\n             )\r\n             })}   \r\n        </ul>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default TodoList;","import React from 'react';\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport TodoList from './TodoList';\r\nconst Form = ({ setStatus,setInputText, todos, setTodos, inputText,filteredTodos }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n        \r\n    }\r\n\r\n    const submitToDoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos,{ text:inputText, completed: false, delete: false, id: Math.random()*100 }\r\n\r\n        ]);\r\n     \r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler=(e)=>\r\n    {\r\n        e.preventDefault();\r\n        setStatus(e.target.value);\r\n\r\n    }\r\n    return (\r\n        <><form>\r\n            <div><h2>TODO</h2></div>\r\n\r\n            <div className=\"input-section\">\r\n                <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n                <button onClick={submitToDoHandler} className=\"todo-button\" type=\"submit\">\r\n                    <AiOutlinePlus className=\"plus-icon\" />\r\n                </button>\r\n            </div>\r\n\r\n            <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\r\n            <div className=\"select\">\r\n                <div onClick={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <button value=\"all\" className='number-display'>{todos.length} Items left</button>\r\n                    <div className='filter-display'>\r\n                    <button value=\"all\">All</button>\r\n                    <button value=\"completed\">Completed</button>\r\n                    <button value=\"uncompleted\">Uncompleted</button>\r\n                    </div>\r\n                    <button className='clear-completed' value=\"Clear Completed\">Clear Completed</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form></>\r\n        )\r\n\r\n\r\n}\r\nexport default Form;","import './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\nimport React, { useState, useEffect} from 'react';\n\nfunction App() {\n\n\n\n  const [inputText,setInputText]= useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n\n \n\n\nuseEffect(() => {\n\n  getLocalTodos();\n  \n}, [])\n\n  useEffect(() => {\n  filterHandler();\n  saveLocalTodos();\n  },[status,todos]);\n\n  const filterHandler =()=>\n  {\n      switch(status){\n        case 'completed':\n          setFilteredTodos(todos.filter(todo=>todo.completed===true))\n          break;\n          case 'uncompleted':\n            setFilteredTodos(todos.filter(todo=>todo.completed===false))\n            break;\n          default:\n            setFilteredTodos(todos);\n            break;\n        } \n  }\n\n  const saveLocalTodos=()=>\n  {\n\n      localStorage.setItem(\"todo\",JSON.stringify(todos));\n  \n  }\n\n  const getLocalTodos=()=>\n  {\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else{\n     let todoLocal= JSON.parse(localStorage.getItem(\"todo\",JSON.stringify(todos)));\n      setTodos(todoLocal);\n    }\n\n  } \n  \n  return (\n    <div className=\"title\">\n\n      <header >\n      </header>\n      <Form filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} status={status} setStatus={setStatus} inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} />\n    </div>\n    \n    \n  \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}