{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","text","todos","todo","setTodos","fliper","useState","flip","setFlip","className","delete","onClick","e","preventDefault","map","item","id","completed","placeholder","el","filter","TodoList","filteredTodos","Form","setStatus","setInputText","inputText","backgroundDark","backgroundLight","background","setBackground","value","onChange","target","type","Math","random","name","disable","length","App","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d60e8b0c.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { AiFillCheckCircle } from 'react-icons/ai'\r\nconst Todo = ({text,todos,todo,setTodos,fliper}) => {\r\n\r\n    const [flip,setFlip]=useState(false);\r\n    const deleteHandler =(e)=>\r\n    {\r\n        e.preventDefault();\r\n       setTodos(todos.map(el=>{\r\n            if(el.id === todo.id)\r\n            {\r\n                return {...el, delete:!el.delete}\r\n            }\r\n            return el;\r\n           \r\n        })); \r\n        setTodos(todos.filter(el=>el.id !==todo.id))  \r\n    }\r\n    const completedHandler=(e)=>\r\n    {\r\n        setFlip(!flip);\r\n        e.preventDefault();\r\n        setTodos(todos.map(item=>{\r\n            if(item.id === todo.id)\r\n            {\r\n                return {...item, completed:!item.completed}\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n    return (\r\n        <div className={`todo ${todo.delete?\"fall\":''}`}>\r\n            \r\n            {/* {`check ${flip?'checked':''}`} */}\r\n            <button onClick={completedHandler} className={`complete-btn ${fliper?'dark-background':'light-background'}`}>\r\n                <AiFillCheckCircle className={`check ${todo.completed?'checked':''}`} />\r\n            </button>\r\n            <input placeholder={text} className={`todo-item ${fliper?'dark-background':'light-background'} ${todo.completed ? \"completed\":''}`} />\r\n            <button onClick={deleteHandler} className={`trash-btn ${fliper?'dark-background':'light-background'}`}>\r\n                <i className=\"trash\"><AiOutlineClose /></i>         \r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList=({todos, flip,setTodos,filteredTodos})=>\r\n{\r\n  \r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n         {filteredTodos.map(todo=>{\r\n             return(\r\n                    <Todo fliper={flip} todo={todo} setTodos={setTodos} todos={todos} text={todo.text} key={todo.id}/>\r\n             )\r\n             })}   \r\n        </ul>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default TodoList;","import React, { useState } from \"react\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { MdDarkMode } from \"react-icons/md\";\r\nimport { MdLightMode } from \"react-icons/md\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst Form = ({\r\n  setStatus,\r\n  flip,\r\n  setFlip,\r\n  setInputText,\r\n  todos,\r\n  setTodos,\r\n  inputText,\r\n  filteredTodos,\r\n}) => {\r\n  const backgroundDark = <MdDarkMode />;\r\n  const backgroundLight = <MdLightMode />;\r\n  const [background, setBackground] = useState(backgroundDark);\r\n  \r\n\r\n  const darModeHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (flip === true) {\r\n        setBackground(backgroundLight);\r\n      \r\n    } else {\r\n        setBackground(backgroundDark);\r\n         \r\n    }\r\n    setFlip(!flip);\r\n  };\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitToDoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        completed: false,\r\n        delete: false,\r\n        id: Math.random() * 100,\r\n      },\r\n    ]);\r\n\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    e.preventDefault();\r\n    setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className={`form-top`}>\r\n          <h2>TODO</h2>\r\n          <button onClick={darModeHandler}>{background}</button>\r\n        </div>\r\n\r\n        <div className={`input-section`}>\r\n          <input\r\n            value={inputText}\r\n            onChange={inputTextHandler}\r\n            type=\"text\"\r\n            className={`todo-input ${flip?'dark-background':'light-background'}`}\r\n          />\r\n          <button\r\n            onClick={submitToDoHandler}\r\n            className={`todo-button ${flip?'dark-background':'light-background'}`}\r\n            type=\"submit\"\r\n          >\r\n            <AiOutlinePlus className=\"plus-icon\" />\r\n          </button>\r\n        </div>\r\n\r\n        <TodoList\r\n          filteredTodos={filteredTodos}\r\n          setTodos={setTodos}\r\n          todos={todos}\r\n          flip={flip}\r\n        />\r\n        <div className=\"select\">\r\n          <div onClick={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <button value=\"all\" disable className={`number-display ${flip?'dark-background':'light-background'}`}>\r\n              {todos.length} Items left\r\n            </button>\r\n            <div className=\"filter-display\" >\r\n              <button className={` ${flip?'dark-background':'light-background'}`} value=\"all\">All</button>\r\n              <button className={` ${flip?'dark-background':'light-background'}`} value=\"completed\">Completed</button>\r\n              <button className={` ${flip?'dark-background':'light-background'}`} value=\"uncompleted\">Uncompleted</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\nimport React, { useState, useEffect} from 'react';\n\nfunction App() {\n\n\n  const [flip, setFlip] = useState(true);\n  const [inputText,setInputText]= useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n\n \n\n\nuseEffect(() => {\n\n  getLocalTodos();\n  \n}, [])\n\n  useEffect(() => {\n  filterHandler();\n  saveLocalTodos();\n  },[status,todos]);\n\n  const filterHandler =()=>\n  {\n      switch(status){\n        case 'completed':\n          setFilteredTodos(todos.filter(todo=>todo.completed===true))\n          break;\n          case 'uncompleted':\n            setFilteredTodos(todos.filter(todo=>todo.completed===false))\n            break;\n          default:\n            setFilteredTodos(todos);\n            break;\n        } \n  }\n\n  const saveLocalTodos=()=>\n  {\n\n      localStorage.setItem(\"todo\",JSON.stringify(todos));\n  \n  }\n\n  const getLocalTodos=()=>\n  {\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else{\n     let todoLocal= JSON.parse(localStorage.getItem(\"todo\",JSON.stringify(todos)));\n      setTodos(todoLocal);\n    }\n\n  } \n  \n  return (\n    <div className={`title ${flip?'dark-background':'light-background'}`}>\n      <header className={`header ${flip?'dark-header-background':''}`} >\n      <Form flip={flip} setFlip={setFlip} filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} status={status} setStatus={setStatus} inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} />\n      </header>\n     \n    </div>\n    \n    \n  \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}