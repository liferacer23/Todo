{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setStatus","setInputText","todos","setTodos","inputText","className","value","onChange","e","target","type","onClick","preventDefault","text","completed","delete","id","Math","random","console","log","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f25f6864.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FcPlus } from 'react-icons/fc'\r\nconst Form = ({ setStatus,setInputText, todos, setTodos, inputText }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n        \r\n    }\r\n\r\n    const submitToDoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos,{ text:inputText, completed: false, delete: false, id: Math.random()*100 }\r\n\r\n        ]);\r\n        console.log(todos );\r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler=(e)=>\r\n    {\r\n        setStatus(e.target.value);\r\n\r\n    }\r\n    return (\r\n        <form>\r\n            <div className=\"input-section\">     \r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitToDoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"plus-icon\"><FcPlus /></i>\r\n            </button>\r\n            </div>\r\n            <div className=\"select\">\r\n                <select onClick={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n        \r\n        )\r\n\r\n\r\n}\r\nexport default Form;","import React from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { BsPatchCheckFill } from 'react-icons/bs'\r\nconst Todo = ({text,todos,todo,setTodos}) => {\r\n\r\n    const deleteHandler =(e)=>\r\n    {\r\n        \r\n/*         setTodos(todos.map(el=>{\r\n            if(el.id === todo.id)\r\n            {\r\n                return {...el, delete:!el.delete}\r\n            }\r\n            return el;\r\n           \r\n        })); */\r\n         setTodos(todos.filter(el=>el.id !==todo.id))  \r\n    }\r\n    const completedHandler=()=>\r\n    {\r\n        setTodos(todos.map(item=>{\r\n            if(item.id === todo.id)\r\n            {\r\n                return {...item, completed:!item.completed}\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n    return (\r\n        <div className={`todo ${todo.delete?\"fall\":''}`}>\r\n            <li className={`todo-item ${todo.completed ? \"completed\":''}`}>{text}</li>\r\n            <button onClick={completedHandler} className=\"complete-btn\">\r\n                <i className=\"check\"><BsPatchCheckFill /></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"trash\"><RiDeleteBin5Line /></i>         \r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList=({todos, setTodos,filteredTodos})=>\r\n{\r\n  \r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n         {filteredTodos.map(todo=>{\r\n             return(\r\n                    <Todo todo={todo} setTodos={setTodos} todos={todos} text={todo.text} key={todo.id}/>\r\n             )\r\n             })}   \r\n        </ul>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default TodoList;","import './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\nimport React, { useState, useEffect} from 'react';\nfunction App() {\n\n  const [inputText,setInputText]= useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n  \nuseEffect(() => {\n\n  getLocalTodos();\n  \n}, [])\n\n  useEffect(() => {\n  filterHandler();\n  saveLocalTodos();\n  },[status,todos]);\n\n  const filterHandler =()=>\n  {\n      switch(status){\n        case 'completed':\n          setFilteredTodos(todos.filter(todo=>todo.completed===true))\n          break;\n          case 'uncompleted':\n            setFilteredTodos(todos.filter(todo=>todo.completed===false))\n            break;\n          default:\n            setFilteredTodos(todos);\n            break;\n        } \n  }\n\n  const saveLocalTodos=()=>\n  {\n\n      localStorage.setItem(\"todo\",JSON.stringify(todos));\n  \n  }\n\n  const getLocalTodos=()=>\n  {\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else{\n     let todoLocal= JSON.parse(localStorage.getItem(\"todo\",JSON.stringify(todos)));\n      setTodos(todoLocal);\n    }\n\n  }\n  \n  return (\n    <div>\n      <header className=\"title\">\n        <h1>My Todo List</h1>\n      </header>\n      <Form status={status} setStatus={setStatus} inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText}/>\n      <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}/>\n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}